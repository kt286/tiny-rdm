// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {types} from '../models';
import {context} from '../models';

export function AddHashField(arg1:string,arg2:number,arg3:any,arg4:number,arg5:Array<any>):Promise<types.JSResp>;

export function AddListItem(arg1:string,arg2:number,arg3:any,arg4:number,arg5:Array<any>):Promise<types.JSResp>;

export function AddStreamValue(arg1:string,arg2:number,arg3:any,arg4:string,arg5:Array<any>):Promise<types.JSResp>;

export function AddZSetValue(arg1:string,arg2:number,arg3:any,arg4:number,arg5:{[key: string]: number}):Promise<types.JSResp>;

export function BatchSetTTL(arg1:string,arg2:number,arg3:Array<any>,arg4:number,arg5:string):Promise<types.JSResp>;

export function CleanCmdHistory():Promise<types.JSResp>;

export function CloseConnection(arg1:string):Promise<types.JSResp>;

export function ConvertValue(arg1:any,arg2:string,arg3:string):Promise<types.JSResp>;

export function DeleteKey(arg1:string,arg2:number,arg3:any,arg4:boolean):Promise<types.JSResp>;

export function DeleteKeys(arg1:string,arg2:number,arg3:Array<any>,arg4:string):Promise<types.JSResp>;

export function DeleteOneKey(arg1:string,arg2:number,arg3:any):Promise<types.JSResp>;

export function ExportKey(arg1:string,arg2:number,arg3:Array<any>,arg4:string,arg5:boolean):Promise<types.JSResp>;

export function FlushDB(arg1:string,arg2:number,arg3:boolean):Promise<types.JSResp>;

export function GetClientList(arg1:string):Promise<types.JSResp>;

export function GetCmdHistory(arg1:number,arg2:number):Promise<types.JSResp>;

export function GetKeyDetail(arg1:types.KeyDetailParam):Promise<types.JSResp>;

export function GetKeySummary(arg1:types.KeySummaryParam):Promise<types.JSResp>;

export function GetKeyType(arg1:types.KeySummaryParam):Promise<types.JSResp>;

export function GetSlowLogs(arg1:string,arg2:number):Promise<types.JSResp>;

export function ImportCSV(arg1:string,arg2:number,arg3:string,arg4:number,arg5:number):Promise<types.JSResp>;

export function LoadAllKeys(arg1:string,arg2:number,arg3:string,arg4:string):Promise<types.JSResp>;

export function LoadNextAllKeys(arg1:string,arg2:number,arg3:string,arg4:string):Promise<types.JSResp>;

export function LoadNextKeys(arg1:string,arg2:number,arg3:string,arg4:string):Promise<types.JSResp>;

export function OpenConnection(arg1:string):Promise<types.JSResp>;

export function OpenDatabase(arg1:string,arg2:number):Promise<types.JSResp>;

export function RemoveStreamValues(arg1:string,arg2:number,arg3:any,arg4:Array<string>):Promise<types.JSResp>;

export function RenameKey(arg1:string,arg2:number,arg3:string,arg4:string):Promise<types.JSResp>;

export function ServerInfo(arg1:string):Promise<types.JSResp>;

export function SetHashValue(arg1:types.SetHashParam):Promise<types.JSResp>;

export function SetKeyTTL(arg1:string,arg2:number,arg3:any,arg4:number):Promise<types.JSResp>;

export function SetKeyValue(arg1:types.SetKeyParam):Promise<types.JSResp>;

export function SetListItem(arg1:types.SetListParam):Promise<types.JSResp>;

export function SetSetItem(arg1:string,arg2:number,arg3:any,arg4:boolean,arg5:Array<any>):Promise<types.JSResp>;

export function Start(arg1:context.Context):Promise<void>;

export function Stop():Promise<void>;

export function UpdateSetItem(arg1:types.SetSetParam):Promise<types.JSResp>;

export function UpdateZSetValue(arg1:types.SetZSetParam):Promise<types.JSResp>;
